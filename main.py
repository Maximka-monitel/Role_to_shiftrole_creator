#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ CSV –≤ XML
"""

import logging
from modules.file_manager import create_file_manager, create_cli_manager
from modules.logger_manager import LoggerManager, LoggerConfig
from modules.csv_processor import create_csv_processor, create_batch_processor

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ CLI
    cli_manager = create_cli_manager()
    folder_uid, csv_dir = cli_manager.get_cli_parameters()
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–π–ª–æ–≤
    file_manager = create_file_manager(csv_dir)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    csv_files = cli_manager.validate_and_list_files(file_manager)
    if not csv_files:
        return
    
    
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    log_dir = file_manager.create_log_directory()
    logger_config = LoggerConfig()
    logger_manager = LoggerManager(logger_config)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
    batch_processor = create_batch_processor()
    
    # –§–∞–±—Ä–∏–∫–∞ –ª–æ–≥–≥–µ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
    def logger_factory(csv_filename):
        log_path = file_manager.get_log_path(csv_filename)
        return logger_manager.create_logger(
            f"csv_processor_{csv_filename}",
            log_file_path=log_path,
            config=logger_config
        )
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
    results = batch_processor.process_file_list(
        folder_uid=folder_uid,
        csv_dir=csv_dir,
        file_list=csv_files,
        logger_factory=logger_factory
    )
    
    # –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    success_count = sum(1 for success in results.values() if success)
    total_count = len(results)
    
    # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    for filename, success in results.items():
        status = "‚úÖ –£—Å–ø–µ—à–Ω–æ" if success else "‚ùå –û—à–∏–±–∫–∞"
        print(f"  {filename}: {status}")
    
    # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    print("\n" + "="*50)
    print(f"üèÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"   –£—Å–ø–µ—à–Ω–æ: {success_count}/{total_count}")
    if success_count < total_count:
        print(f"   –û—à–∏–±–æ–∫: {total_count - success_count}")
    print("="*50)

if __name__ == "__main__":
    main()